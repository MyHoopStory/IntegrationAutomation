---
- name: Install Flux CLI
  ansible.builtin.get_url:
    url: "https://github.com/fluxcd/flux2/releases/latest/download/flux_{{ ansible_system | lower }}_amd64.tar.gz"
    dest: /tmp/flux.tar.gz
    mode: '0755'

- name: Extract Flux CLI
  ansible.builtin.unarchive:
    src: /tmp/flux.tar.gz
    dest: /usr/local/bin
    remote_src: yes

- name: Bootstrap Flux
  ansible.builtin.command:
    cmd: >-
      flux bootstrap github 
      --owner={{ lookup('env', 'FLUX_GITHUB_OWNER') }} 
      --repository={{ lookup('env', 'FLUX_REPO_NAME') }} 
      --branch=main 
      --path={{ lookup('env', 'FLUX_GITHUB_PATH') }} 
      --personal
  environment:
    GITHUB_TOKEN: "{{ lookup('env', 'GH_TOKEN') }}"
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  when: ansible_hostname == hostvars[groups['master'][0]]['ansible_hostname'] 

- name: Check k3s server status
  ansible.builtin.command: k3s check-ready
  register: k3s_status
  ignore_errors: true
  changed_when: false

- name: Debug k3s status
  ansible.builtin.debug:
    var: k3s_status
  when: k3s_status.rc != 0

- name: Init cluster inside the transient k3s-init service
  ansible.builtin.command:
    cmd: systemd-run -p RestartSec=2 -p Restart=on-failure --unit=k3s-init k3s server --cluster-init {{ server_init_args | default('') }}
    creates: "{{ systemd_dir }}/k3s-init.service"
  register: init_result
  when: inventory_hostname == groups[group_name_master][0]
  failed_when: 
    - init_result.rc != 0
    - "'already exists' not in init_result.stderr"

- name: Wait for API server to be available
  ansible.builtin.wait_for:
    host: "{{ apiserver_endpoint }}"
    port: 6443
    timeout: 600
  retries: 10
  delay: 30
  when: inventory_hostname != groups[group_name_master][0]