---
- name: Pre tasks
  hosts: all
  pre_tasks:
    - name: Configure DNS servers
      ansible.builtin.template:
        src: roles/prereq/templates/resolv.conf.j2
        dest: /etc/resolv.conf
        mode: '0644'
      become: true

    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"
      become: true

    - name: Update /etc/hosts with new hostname
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: '127.0.1.1 {{ hostname }}'
        owner: root
        group: root
        mode: '0644'
      become: true

    - name: Update /etc/hosts file
      become: true
      blockinfile:
        path: /etc/hosts
        block: |
          10.77.250.211 k3s-master-0
          10.77.250.212 k3s-master-1
          10.77.250.213 k3s-master-2
          10.77.250.214 k3s-worker-0
          10.77.250.215 k3s-worker-1
          10.77.250.216 postgresql-db
        marker: "# {mark} ANSIBLE MANAGED K3S CLUSTER HOSTS"

    - name: Ensure .ssh directory exists
      ansible.builtin.file:
        path: /home/serveradmin/.ssh
        state: directory
        mode: '0700'
        owner: serveradmin
        group: serveradmin
      become: true

    - name: Copy SSH key to remote hosts
      ansible.builtin.copy:
        src: /home/ansible/.ssh/id_rsa.pub
        dest: /home/serveradmin/.ssh/authorized_keys
        owner: serveradmin
        group: serveradmin
        mode: '0600'
      become: true

    - name: Ensure SSH key is present on target nodes
      ansible.builtin.authorized_key:
        user: serveradmin
        state: present
        key: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"

    - name: Verify Ansible version
      ansible.builtin.assert:
        that: ansible_version.full is version_compare('2.11', '>=')
        msg: "Ansible 2.11 or higher required"

    - name: Allow Kubernetes API server port 6443
      community.general.ufw:
        rule: allow
        port: 6443
        proto: tcp
      become: true

- name: Setup PostgreSQL Database
  hosts: postgresql_db
  gather_facts: true
  pre_tasks:
    - name: Remove host from known_hosts
      ansible.builtin.known_hosts:
        name: "{{ inventory_hostname }}"
        state: absent
      delegate_to: localhost
  roles:
    - role: postgresql
      become: true

- name: Prepare k3s nodes
  hosts: k3s_cluster
  gather_facts: true
  vars:
    k3s_version: "v1.29.1+k3s2"
  roles:
    - role: prereq
      become: true
    - role: download
      become: true

- name: Setup initial k3s master (first master node)
  hosts: master[0]
  vars:
    apiserver_endpoint: "10.77.250.220"
    k3s_token: "{{ lookup('env', 'K3S_TOKEN') | default('your-secure-token') }}"
    k3s_version: "v1.29.1+k3s2"
  roles:
    - role: k3s_server_initial
      become: true

- name: Setup other k3s master nodes
  hosts: master[1:]
  vars:
    apiserver_endpoint: "10.77.250.220"
    k3s_token: "{{ hostvars['master'][0].token }}"
    k3s_version: "v1.29.1+k3s2"
  roles:
    - role: k3s_server
      become: true
      vars:
        k3s_server: true
        k3s_control_plane: true
        group_name_master: master

- name: Setup k3s workers
  hosts: node
  roles:
    - role: k3s_agent
      become: true
      vars:
        apiserver_endpoint: "{{ apiserver_endpoint }}"
        k3s_token: "{{ hostvars['master'][0].token }}"
        group_name_master: master

- name: Verify all nodes have joined
  hosts: master[0]
  tasks:
    - name: Verify that all nodes actually joined
      ansible.builtin.command:
        cmd: "{{ k3s_kubectl_binary | default('k3s kubectl') }} get nodes -l 'node-role.kubernetes.io/control-plane=true' -o=jsonpath='{.items[*].metadata.name}'"
      register: nodes
      until: nodes.rc == 0 and (nodes.stdout.split() | length) == (groups[group_name_master] | length + groups['master'] | length)
      retries: "{{ retry_count | default(30) }}"
      delay: 60
      changed_when: false

- name: Configure k3s cluster
  hosts: master
  roles:
    - role: k3s_server_post
      become: true
    - role: flux
      become: true

- name: Storing kubeconfig in the playbook directory
  hosts: master
  tasks:
    - name: Copying kubeconfig
      ansible.builtin.fetch:
        src: "{{ ansible_user_dir }}/.kube/config"
        dest: ./kubeconfig
        flat: true
      when: inventory_hostname in groups['master'] and inventory_hostname == groups['master'][0]

- name: Add SSH public key to target nodes
  hosts: all
  tasks:
    - name: Add SSH public key to target nodes
      ansible.builtin.authorized_key:
        user: serveradmin
        key: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"
        state: present

- name: Fetch k3s node-token from initial master
  hosts: master[0]
  become: true
  tasks:
    - name: Read node-token
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: node_token_slurp

    - name: Set node-token as fact
      set_fact:
        k3s_node_token: "{{ node_token_slurp.content | b64decode }}"

- name: Change file access node-token
  hosts: master
  tasks:
    - name: Change file access node-token
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/node-token
        mode: g+rx,o+rx
      become: true